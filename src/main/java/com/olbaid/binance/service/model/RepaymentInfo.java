/*
 * Binance Public Spot API
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.olbaid.binance.service.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RepaymentInfo
 */
@JsonPropertyOrder({
  RepaymentInfo.JSON_PROPERTY_LOAN_COIN,
  RepaymentInfo.JSON_PROPERTY_REMAINING_PRINCIPAL,
  RepaymentInfo.JSON_PROPERTY_REMAINING_INTEREST,
  RepaymentInfo.JSON_PROPERTY_COLLATERAL_COIN,
  RepaymentInfo.JSON_PROPERTY_REMAINING_COLLATERAL,
  RepaymentInfo.JSON_PROPERTY_CURRENT_L_T_V,
  RepaymentInfo.JSON_PROPERTY_REPAY_STATUS
})
@JsonTypeName("repaymentInfo")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RepaymentInfo {
  public static final String JSON_PROPERTY_LOAN_COIN = "loanCoin";
  private String loanCoin;

  public static final String JSON_PROPERTY_REMAINING_PRINCIPAL = "remainingPrincipal";
  private String remainingPrincipal;

  public static final String JSON_PROPERTY_REMAINING_INTEREST = "remainingInterest";
  private String remainingInterest;

  public static final String JSON_PROPERTY_COLLATERAL_COIN = "collateralCoin";
  private String collateralCoin;

  public static final String JSON_PROPERTY_REMAINING_COLLATERAL = "remainingCollateral";
  private String remainingCollateral;

  public static final String JSON_PROPERTY_CURRENT_L_T_V = "currentLTV";
  private String currentLTV;

  public static final String JSON_PROPERTY_REPAY_STATUS = "repayStatus";
  private String repayStatus;

  public RepaymentInfo() {
  }

  public RepaymentInfo loanCoin(String loanCoin) {
    
    this.loanCoin = loanCoin;
    return this;
  }

   /**
   * Get loanCoin
   * @return loanCoin
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "BUSD", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOAN_COIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLoanCoin() {
    return loanCoin;
  }


  @JsonProperty(JSON_PROPERTY_LOAN_COIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLoanCoin(String loanCoin) {
    this.loanCoin = loanCoin;
  }


  public RepaymentInfo remainingPrincipal(String remainingPrincipal) {
    
    this.remainingPrincipal = remainingPrincipal;
    return this;
  }

   /**
   * Get remainingPrincipal
   * @return remainingPrincipal
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "100.5", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_REMAINING_PRINCIPAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRemainingPrincipal() {
    return remainingPrincipal;
  }


  @JsonProperty(JSON_PROPERTY_REMAINING_PRINCIPAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRemainingPrincipal(String remainingPrincipal) {
    this.remainingPrincipal = remainingPrincipal;
  }


  public RepaymentInfo remainingInterest(String remainingInterest) {
    
    this.remainingInterest = remainingInterest;
    return this;
  }

   /**
   * Get remainingInterest
   * @return remainingInterest
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "0", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_REMAINING_INTEREST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRemainingInterest() {
    return remainingInterest;
  }


  @JsonProperty(JSON_PROPERTY_REMAINING_INTEREST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRemainingInterest(String remainingInterest) {
    this.remainingInterest = remainingInterest;
  }


  public RepaymentInfo collateralCoin(String collateralCoin) {
    
    this.collateralCoin = collateralCoin;
    return this;
  }

   /**
   * Get collateralCoin
   * @return collateralCoin
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "BNB", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_COLLATERAL_COIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCollateralCoin() {
    return collateralCoin;
  }


  @JsonProperty(JSON_PROPERTY_COLLATERAL_COIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCollateralCoin(String collateralCoin) {
    this.collateralCoin = collateralCoin;
  }


  public RepaymentInfo remainingCollateral(String remainingCollateral) {
    
    this.remainingCollateral = remainingCollateral;
    return this;
  }

   /**
   * Get remainingCollateral
   * @return remainingCollateral
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "5.253", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_REMAINING_COLLATERAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRemainingCollateral() {
    return remainingCollateral;
  }


  @JsonProperty(JSON_PROPERTY_REMAINING_COLLATERAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRemainingCollateral(String remainingCollateral) {
    this.remainingCollateral = remainingCollateral;
  }


  public RepaymentInfo currentLTV(String currentLTV) {
    
    this.currentLTV = currentLTV;
    return this;
  }

   /**
   * Get currentLTV
   * @return currentLTV
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "0.25", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CURRENT_L_T_V)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCurrentLTV() {
    return currentLTV;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_L_T_V)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrentLTV(String currentLTV) {
    this.currentLTV = currentLTV;
  }


  public RepaymentInfo repayStatus(String repayStatus) {
    
    this.repayStatus = repayStatus;
    return this;
  }

   /**
   * Get repayStatus
   * @return repayStatus
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "Repaying", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_REPAY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRepayStatus() {
    return repayStatus;
  }


  @JsonProperty(JSON_PROPERTY_REPAY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRepayStatus(String repayStatus) {
    this.repayStatus = repayStatus;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RepaymentInfo repaymentInfo = (RepaymentInfo) o;
    return Objects.equals(this.loanCoin, repaymentInfo.loanCoin) &&
        Objects.equals(this.remainingPrincipal, repaymentInfo.remainingPrincipal) &&
        Objects.equals(this.remainingInterest, repaymentInfo.remainingInterest) &&
        Objects.equals(this.collateralCoin, repaymentInfo.collateralCoin) &&
        Objects.equals(this.remainingCollateral, repaymentInfo.remainingCollateral) &&
        Objects.equals(this.currentLTV, repaymentInfo.currentLTV) &&
        Objects.equals(this.repayStatus, repaymentInfo.repayStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loanCoin, remainingPrincipal, remainingInterest, collateralCoin, remainingCollateral, currentLTV, repayStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RepaymentInfo {\n");
    sb.append("    loanCoin: ").append(toIndentedString(loanCoin)).append("\n");
    sb.append("    remainingPrincipal: ").append(toIndentedString(remainingPrincipal)).append("\n");
    sb.append("    remainingInterest: ").append(toIndentedString(remainingInterest)).append("\n");
    sb.append("    collateralCoin: ").append(toIndentedString(collateralCoin)).append("\n");
    sb.append("    remainingCollateral: ").append(toIndentedString(remainingCollateral)).append("\n");
    sb.append("    currentLTV: ").append(toIndentedString(currentLTV)).append("\n");
    sb.append("    repayStatus: ").append(toIndentedString(repayStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

