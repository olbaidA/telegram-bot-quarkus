/*
 * Binance Public Spot API
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.olbaid.binance.service.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.olbaid.binance.service.model.IsolatedMarginAccountInfoAssetsInnerBaseAsset;
import com.olbaid.binance.service.model.IsolatedMarginAccountInfoAssetsInnerQuoteAsset;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * IsolatedMarginAccountInfoAssetsInner
 */
@JsonPropertyOrder({
  IsolatedMarginAccountInfoAssetsInner.JSON_PROPERTY_BASE_ASSET,
  IsolatedMarginAccountInfoAssetsInner.JSON_PROPERTY_QUOTE_ASSET,
  IsolatedMarginAccountInfoAssetsInner.JSON_PROPERTY_SYMBOL,
  IsolatedMarginAccountInfoAssetsInner.JSON_PROPERTY_ISOLATED_CREATED,
  IsolatedMarginAccountInfoAssetsInner.JSON_PROPERTY_ENABLED,
  IsolatedMarginAccountInfoAssetsInner.JSON_PROPERTY_MARGIN_LEVEL,
  IsolatedMarginAccountInfoAssetsInner.JSON_PROPERTY_MARGIN_LEVEL_STATUS,
  IsolatedMarginAccountInfoAssetsInner.JSON_PROPERTY_MARGIN_RATIO,
  IsolatedMarginAccountInfoAssetsInner.JSON_PROPERTY_INDEX_PRICE,
  IsolatedMarginAccountInfoAssetsInner.JSON_PROPERTY_LIQUIDATE_PRICE,
  IsolatedMarginAccountInfoAssetsInner.JSON_PROPERTY_LIQUIDATE_RATE,
  IsolatedMarginAccountInfoAssetsInner.JSON_PROPERTY_TRADE_ENABLED
})
@JsonTypeName("isolatedMarginAccountInfo_assets_inner")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class IsolatedMarginAccountInfoAssetsInner {
  public static final String JSON_PROPERTY_BASE_ASSET = "baseAsset";
  private IsolatedMarginAccountInfoAssetsInnerBaseAsset baseAsset;

  public static final String JSON_PROPERTY_QUOTE_ASSET = "quoteAsset";
  private IsolatedMarginAccountInfoAssetsInnerQuoteAsset quoteAsset;

  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  private String symbol;

  public static final String JSON_PROPERTY_ISOLATED_CREATED = "isolatedCreated";
  private Boolean isolatedCreated;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_MARGIN_LEVEL = "marginLevel";
  private String marginLevel;

  public static final String JSON_PROPERTY_MARGIN_LEVEL_STATUS = "marginLevelStatus";
  private String marginLevelStatus;

  public static final String JSON_PROPERTY_MARGIN_RATIO = "marginRatio";
  private String marginRatio;

  public static final String JSON_PROPERTY_INDEX_PRICE = "indexPrice";
  private String indexPrice;

  public static final String JSON_PROPERTY_LIQUIDATE_PRICE = "liquidatePrice";
  private String liquidatePrice;

  public static final String JSON_PROPERTY_LIQUIDATE_RATE = "liquidateRate";
  private String liquidateRate;

  public static final String JSON_PROPERTY_TRADE_ENABLED = "tradeEnabled";
  private Boolean tradeEnabled;

  public IsolatedMarginAccountInfoAssetsInner() {
  }

  public IsolatedMarginAccountInfoAssetsInner baseAsset(IsolatedMarginAccountInfoAssetsInnerBaseAsset baseAsset) {
    
    this.baseAsset = baseAsset;
    return this;
  }

   /**
   * Get baseAsset
   * @return baseAsset
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_BASE_ASSET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public IsolatedMarginAccountInfoAssetsInnerBaseAsset getBaseAsset() {
    return baseAsset;
  }


  @JsonProperty(JSON_PROPERTY_BASE_ASSET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBaseAsset(IsolatedMarginAccountInfoAssetsInnerBaseAsset baseAsset) {
    this.baseAsset = baseAsset;
  }


  public IsolatedMarginAccountInfoAssetsInner quoteAsset(IsolatedMarginAccountInfoAssetsInnerQuoteAsset quoteAsset) {
    
    this.quoteAsset = quoteAsset;
    return this;
  }

   /**
   * Get quoteAsset
   * @return quoteAsset
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_QUOTE_ASSET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public IsolatedMarginAccountInfoAssetsInnerQuoteAsset getQuoteAsset() {
    return quoteAsset;
  }


  @JsonProperty(JSON_PROPERTY_QUOTE_ASSET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQuoteAsset(IsolatedMarginAccountInfoAssetsInnerQuoteAsset quoteAsset) {
    this.quoteAsset = quoteAsset;
  }


  public IsolatedMarginAccountInfoAssetsInner symbol(String symbol) {
    
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "BTCUSDT", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  public IsolatedMarginAccountInfoAssetsInner isolatedCreated(Boolean isolatedCreated) {
    
    this.isolatedCreated = isolatedCreated;
    return this;
  }

   /**
   * Get isolatedCreated
   * @return isolatedCreated
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ISOLATED_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsolatedCreated() {
    return isolatedCreated;
  }


  @JsonProperty(JSON_PROPERTY_ISOLATED_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsolatedCreated(Boolean isolatedCreated) {
    this.isolatedCreated = isolatedCreated;
  }


  public IsolatedMarginAccountInfoAssetsInner enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * true-enabled, false-disabled
   * @return enabled
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "true-enabled, false-disabled")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public IsolatedMarginAccountInfoAssetsInner marginLevel(String marginLevel) {
    
    this.marginLevel = marginLevel;
    return this;
  }

   /**
   * Get marginLevel
   * @return marginLevel
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "0.00000000", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MARGIN_LEVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMarginLevel() {
    return marginLevel;
  }


  @JsonProperty(JSON_PROPERTY_MARGIN_LEVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMarginLevel(String marginLevel) {
    this.marginLevel = marginLevel;
  }


  public IsolatedMarginAccountInfoAssetsInner marginLevelStatus(String marginLevelStatus) {
    
    this.marginLevelStatus = marginLevelStatus;
    return this;
  }

   /**
   * \&quot;EXCESSIVE\&quot;, \&quot;NORMAL\&quot;, \&quot;MARGIN_CALL\&quot;, \&quot;PRE_LIQUIDATION\&quot;, \&quot;FORCE_LIQUIDATION\&quot;
   * @return marginLevelStatus
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "EXCESSIVE", required = true, value = "\"EXCESSIVE\", \"NORMAL\", \"MARGIN_CALL\", \"PRE_LIQUIDATION\", \"FORCE_LIQUIDATION\"")
  @JsonProperty(JSON_PROPERTY_MARGIN_LEVEL_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMarginLevelStatus() {
    return marginLevelStatus;
  }


  @JsonProperty(JSON_PROPERTY_MARGIN_LEVEL_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMarginLevelStatus(String marginLevelStatus) {
    this.marginLevelStatus = marginLevelStatus;
  }


  public IsolatedMarginAccountInfoAssetsInner marginRatio(String marginRatio) {
    
    this.marginRatio = marginRatio;
    return this;
  }

   /**
   * Get marginRatio
   * @return marginRatio
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "0.00000000", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MARGIN_RATIO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMarginRatio() {
    return marginRatio;
  }


  @JsonProperty(JSON_PROPERTY_MARGIN_RATIO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMarginRatio(String marginRatio) {
    this.marginRatio = marginRatio;
  }


  public IsolatedMarginAccountInfoAssetsInner indexPrice(String indexPrice) {
    
    this.indexPrice = indexPrice;
    return this;
  }

   /**
   * Get indexPrice
   * @return indexPrice
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "10000.00000000", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_INDEX_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIndexPrice() {
    return indexPrice;
  }


  @JsonProperty(JSON_PROPERTY_INDEX_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIndexPrice(String indexPrice) {
    this.indexPrice = indexPrice;
  }


  public IsolatedMarginAccountInfoAssetsInner liquidatePrice(String liquidatePrice) {
    
    this.liquidatePrice = liquidatePrice;
    return this;
  }

   /**
   * Get liquidatePrice
   * @return liquidatePrice
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "1000.00000000", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LIQUIDATE_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLiquidatePrice() {
    return liquidatePrice;
  }


  @JsonProperty(JSON_PROPERTY_LIQUIDATE_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLiquidatePrice(String liquidatePrice) {
    this.liquidatePrice = liquidatePrice;
  }


  public IsolatedMarginAccountInfoAssetsInner liquidateRate(String liquidateRate) {
    
    this.liquidateRate = liquidateRate;
    return this;
  }

   /**
   * Get liquidateRate
   * @return liquidateRate
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "1.00000000", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LIQUIDATE_RATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLiquidateRate() {
    return liquidateRate;
  }


  @JsonProperty(JSON_PROPERTY_LIQUIDATE_RATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLiquidateRate(String liquidateRate) {
    this.liquidateRate = liquidateRate;
  }


  public IsolatedMarginAccountInfoAssetsInner tradeEnabled(Boolean tradeEnabled) {
    
    this.tradeEnabled = tradeEnabled;
    return this;
  }

   /**
   * Get tradeEnabled
   * @return tradeEnabled
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TRADE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getTradeEnabled() {
    return tradeEnabled;
  }


  @JsonProperty(JSON_PROPERTY_TRADE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTradeEnabled(Boolean tradeEnabled) {
    this.tradeEnabled = tradeEnabled;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IsolatedMarginAccountInfoAssetsInner isolatedMarginAccountInfoAssetsInner = (IsolatedMarginAccountInfoAssetsInner) o;
    return Objects.equals(this.baseAsset, isolatedMarginAccountInfoAssetsInner.baseAsset) &&
        Objects.equals(this.quoteAsset, isolatedMarginAccountInfoAssetsInner.quoteAsset) &&
        Objects.equals(this.symbol, isolatedMarginAccountInfoAssetsInner.symbol) &&
        Objects.equals(this.isolatedCreated, isolatedMarginAccountInfoAssetsInner.isolatedCreated) &&
        Objects.equals(this.enabled, isolatedMarginAccountInfoAssetsInner.enabled) &&
        Objects.equals(this.marginLevel, isolatedMarginAccountInfoAssetsInner.marginLevel) &&
        Objects.equals(this.marginLevelStatus, isolatedMarginAccountInfoAssetsInner.marginLevelStatus) &&
        Objects.equals(this.marginRatio, isolatedMarginAccountInfoAssetsInner.marginRatio) &&
        Objects.equals(this.indexPrice, isolatedMarginAccountInfoAssetsInner.indexPrice) &&
        Objects.equals(this.liquidatePrice, isolatedMarginAccountInfoAssetsInner.liquidatePrice) &&
        Objects.equals(this.liquidateRate, isolatedMarginAccountInfoAssetsInner.liquidateRate) &&
        Objects.equals(this.tradeEnabled, isolatedMarginAccountInfoAssetsInner.tradeEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseAsset, quoteAsset, symbol, isolatedCreated, enabled, marginLevel, marginLevelStatus, marginRatio, indexPrice, liquidatePrice, liquidateRate, tradeEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IsolatedMarginAccountInfoAssetsInner {\n");
    sb.append("    baseAsset: ").append(toIndentedString(baseAsset)).append("\n");
    sb.append("    quoteAsset: ").append(toIndentedString(quoteAsset)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    isolatedCreated: ").append(toIndentedString(isolatedCreated)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    marginLevel: ").append(toIndentedString(marginLevel)).append("\n");
    sb.append("    marginLevelStatus: ").append(toIndentedString(marginLevelStatus)).append("\n");
    sb.append("    marginRatio: ").append(toIndentedString(marginRatio)).append("\n");
    sb.append("    indexPrice: ").append(toIndentedString(indexPrice)).append("\n");
    sb.append("    liquidatePrice: ").append(toIndentedString(liquidatePrice)).append("\n");
    sb.append("    liquidateRate: ").append(toIndentedString(liquidateRate)).append("\n");
    sb.append("    tradeEnabled: ").append(toIndentedString(tradeEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

