/*
 * Binance Public Spot API
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.olbaid.binance.service.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Trade
 */
@JsonPropertyOrder({
  Trade.JSON_PROPERTY_ID,
  Trade.JSON_PROPERTY_PRICE,
  Trade.JSON_PROPERTY_QTY,
  Trade.JSON_PROPERTY_QUOTE_QTY,
  Trade.JSON_PROPERTY_TIME,
  Trade.JSON_PROPERTY_IS_BUYER_MAKER,
  Trade.JSON_PROPERTY_IS_BEST_MATCH
})
@JsonTypeName("trade")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Trade {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_PRICE = "price";
  private String price;

  public static final String JSON_PROPERTY_QTY = "qty";
  private String qty;

  public static final String JSON_PROPERTY_QUOTE_QTY = "quoteQty";
  private String quoteQty;

  public static final String JSON_PROPERTY_TIME = "time";
  private Long time;

  public static final String JSON_PROPERTY_IS_BUYER_MAKER = "isBuyerMaker";
  private Boolean isBuyerMaker;

  public static final String JSON_PROPERTY_IS_BEST_MATCH = "isBestMatch";
  private Boolean isBestMatch;

  public Trade() {
  }

  public Trade id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * trade id
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "345196462", required = true, value = "trade id")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Trade price(String price) {
    
    this.price = price;
    return this;
  }

   /**
   * price
   * @return price
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "9638.99000000", required = true, value = "price")
  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPrice() {
    return price;
  }


  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPrice(String price) {
    this.price = price;
  }


  public Trade qty(String qty) {
    
    this.qty = qty;
    return this;
  }

   /**
   * amount of base asset
   * @return qty
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "0.02077200", required = true, value = "amount of base asset")
  @JsonProperty(JSON_PROPERTY_QTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getQty() {
    return qty;
  }


  @JsonProperty(JSON_PROPERTY_QTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQty(String qty) {
    this.qty = qty;
  }


  public Trade quoteQty(String quoteQty) {
    
    this.quoteQty = quoteQty;
    return this;
  }

   /**
   * amount of quote asset
   * @return quoteQty
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "0.02077200", required = true, value = "amount of quote asset")
  @JsonProperty(JSON_PROPERTY_QUOTE_QTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getQuoteQty() {
    return quoteQty;
  }


  @JsonProperty(JSON_PROPERTY_QUOTE_QTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQuoteQty(String quoteQty) {
    this.quoteQty = quoteQty;
  }


  public Trade time(Long time) {
    
    this.time = time;
    return this;
  }

   /**
   * Trade executed timestamp, as same as &#x60;T&#x60; in the stream
   * @return time
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "1592887772684", required = true, value = "Trade executed timestamp, as same as `T` in the stream")
  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getTime() {
    return time;
  }


  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTime(Long time) {
    this.time = time;
  }


  public Trade isBuyerMaker(Boolean isBuyerMaker) {
    
    this.isBuyerMaker = isBuyerMaker;
    return this;
  }

   /**
   * Get isBuyerMaker
   * @return isBuyerMaker
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_IS_BUYER_MAKER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsBuyerMaker() {
    return isBuyerMaker;
  }


  @JsonProperty(JSON_PROPERTY_IS_BUYER_MAKER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsBuyerMaker(Boolean isBuyerMaker) {
    this.isBuyerMaker = isBuyerMaker;
  }


  public Trade isBestMatch(Boolean isBestMatch) {
    
    this.isBestMatch = isBestMatch;
    return this;
  }

   /**
   * Get isBestMatch
   * @return isBestMatch
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_IS_BEST_MATCH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsBestMatch() {
    return isBestMatch;
  }


  @JsonProperty(JSON_PROPERTY_IS_BEST_MATCH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsBestMatch(Boolean isBestMatch) {
    this.isBestMatch = isBestMatch;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Trade trade = (Trade) o;
    return Objects.equals(this.id, trade.id) &&
        Objects.equals(this.price, trade.price) &&
        Objects.equals(this.qty, trade.qty) &&
        Objects.equals(this.quoteQty, trade.quoteQty) &&
        Objects.equals(this.time, trade.time) &&
        Objects.equals(this.isBuyerMaker, trade.isBuyerMaker) &&
        Objects.equals(this.isBestMatch, trade.isBestMatch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, price, qty, quoteQty, time, isBuyerMaker, isBestMatch);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Trade {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    qty: ").append(toIndentedString(qty)).append("\n");
    sb.append("    quoteQty: ").append(toIndentedString(quoteQty)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    isBuyerMaker: ").append(toIndentedString(isBuyerMaker)).append("\n");
    sb.append("    isBestMatch: ").append(toIndentedString(isBestMatch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

