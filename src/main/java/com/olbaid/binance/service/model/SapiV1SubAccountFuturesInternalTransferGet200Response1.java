/*
 * Binance Public Spot API
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.olbaid.binance.service.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SapiV1SubAccountFuturesInternalTransferGet200Response1
 */
@JsonPropertyOrder({
  SapiV1SubAccountFuturesInternalTransferGet200Response1.JSON_PROPERTY_SUCCESS,
  SapiV1SubAccountFuturesInternalTransferGet200Response1.JSON_PROPERTY_TXN_ID
})
@JsonTypeName("_sapi_v1_sub_account_futures_internalTransfer_get_200_response_1")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SapiV1SubAccountFuturesInternalTransferGet200Response1 {
  public static final String JSON_PROPERTY_SUCCESS = "success";
  private Boolean success;

  public static final String JSON_PROPERTY_TXN_ID = "txnId";
  private String txnId;

  public SapiV1SubAccountFuturesInternalTransferGet200Response1() {
  }

  public SapiV1SubAccountFuturesInternalTransferGet200Response1 success(Boolean success) {
    
    this.success = success;
    return this;
  }

   /**
   * Get success
   * @return success
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SUCCESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getSuccess() {
    return success;
  }


  @JsonProperty(JSON_PROPERTY_SUCCESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSuccess(Boolean success) {
    this.success = success;
  }


  public SapiV1SubAccountFuturesInternalTransferGet200Response1 txnId(String txnId) {
    
    this.txnId = txnId;
    return this;
  }

   /**
   * Get txnId
   * @return txnId
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "2934662589", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TXN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTxnId() {
    return txnId;
  }


  @JsonProperty(JSON_PROPERTY_TXN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTxnId(String txnId) {
    this.txnId = txnId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SapiV1SubAccountFuturesInternalTransferGet200Response1 sapiV1SubAccountFuturesInternalTransferGet200Response1 = (SapiV1SubAccountFuturesInternalTransferGet200Response1) o;
    return Objects.equals(this.success, sapiV1SubAccountFuturesInternalTransferGet200Response1.success) &&
        Objects.equals(this.txnId, sapiV1SubAccountFuturesInternalTransferGet200Response1.txnId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(success, txnId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SapiV1SubAccountFuturesInternalTransferGet200Response1 {\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    txnId: ").append(toIndentedString(txnId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

