/*
 * Binance Public Spot API
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.olbaid.binance.service.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SapiV1PayTransactionsGet200ResponseDataInnerPayerInfo
 */
@JsonPropertyOrder({
  SapiV1PayTransactionsGet200ResponseDataInnerPayerInfo.JSON_PROPERTY_NAME,
  SapiV1PayTransactionsGet200ResponseDataInnerPayerInfo.JSON_PROPERTY_TYPE,
  SapiV1PayTransactionsGet200ResponseDataInnerPayerInfo.JSON_PROPERTY_BINANCE_ID,
  SapiV1PayTransactionsGet200ResponseDataInnerPayerInfo.JSON_PROPERTY_ACCOUNT_ID
})
@JsonTypeName("_sapi_v1_pay_transactions_get_200_response_data_inner_payerInfo")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SapiV1PayTransactionsGet200ResponseDataInnerPayerInfo {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_BINANCE_ID = "binanceId";
  private String binanceId;

  public static final String JSON_PROPERTY_ACCOUNT_ID = "accountId";
  private String accountId;

  public SapiV1PayTransactionsGet200ResponseDataInnerPayerInfo() {
  }

  public SapiV1PayTransactionsGet200ResponseDataInnerPayerInfo name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "Jack", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public SapiV1PayTransactionsGet200ResponseDataInnerPayerInfo type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "USER", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public SapiV1PayTransactionsGet200ResponseDataInnerPayerInfo binanceId(String binanceId) {
    
    this.binanceId = binanceId;
    return this;
  }

   /**
   * Get binanceId
   * @return binanceId
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "12345678", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_BINANCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBinanceId() {
    return binanceId;
  }


  @JsonProperty(JSON_PROPERTY_BINANCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBinanceId(String binanceId) {
    this.binanceId = binanceId;
  }


  public SapiV1PayTransactionsGet200ResponseDataInnerPayerInfo accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "67736251", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SapiV1PayTransactionsGet200ResponseDataInnerPayerInfo sapiV1PayTransactionsGet200ResponseDataInnerPayerInfo = (SapiV1PayTransactionsGet200ResponseDataInnerPayerInfo) o;
    return Objects.equals(this.name, sapiV1PayTransactionsGet200ResponseDataInnerPayerInfo.name) &&
        Objects.equals(this.type, sapiV1PayTransactionsGet200ResponseDataInnerPayerInfo.type) &&
        Objects.equals(this.binanceId, sapiV1PayTransactionsGet200ResponseDataInnerPayerInfo.binanceId) &&
        Objects.equals(this.accountId, sapiV1PayTransactionsGet200ResponseDataInnerPayerInfo.accountId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, type, binanceId, accountId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SapiV1PayTransactionsGet200ResponseDataInnerPayerInfo {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    binanceId: ").append(toIndentedString(binanceId)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

