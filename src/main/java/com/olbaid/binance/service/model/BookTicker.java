/*
 * Binance Public Spot API
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.olbaid.binance.service.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BookTicker
 */
@JsonPropertyOrder({
  BookTicker.JSON_PROPERTY_SYMBOL,
  BookTicker.JSON_PROPERTY_BID_PRICE,
  BookTicker.JSON_PROPERTY_BID_QTY,
  BookTicker.JSON_PROPERTY_ASK_PRICE,
  BookTicker.JSON_PROPERTY_ASK_QTY
})
@JsonTypeName("bookTicker")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BookTicker {
  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  private String symbol;

  public static final String JSON_PROPERTY_BID_PRICE = "bidPrice";
  private String bidPrice;

  public static final String JSON_PROPERTY_BID_QTY = "bidQty";
  private String bidQty;

  public static final String JSON_PROPERTY_ASK_PRICE = "askPrice";
  private String askPrice;

  public static final String JSON_PROPERTY_ASK_QTY = "askQty";
  private String askQty;

  public BookTicker() {
  }

  public BookTicker symbol(String symbol) {
    
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "BNBBTC", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  public BookTicker bidPrice(String bidPrice) {
    
    this.bidPrice = bidPrice;
    return this;
  }

   /**
   * Get bidPrice
   * @return bidPrice
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "16.36240000", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_BID_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBidPrice() {
    return bidPrice;
  }


  @JsonProperty(JSON_PROPERTY_BID_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBidPrice(String bidPrice) {
    this.bidPrice = bidPrice;
  }


  public BookTicker bidQty(String bidQty) {
    
    this.bidQty = bidQty;
    return this;
  }

   /**
   * Get bidQty
   * @return bidQty
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "256.78000000", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_BID_QTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBidQty() {
    return bidQty;
  }


  @JsonProperty(JSON_PROPERTY_BID_QTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBidQty(String bidQty) {
    this.bidQty = bidQty;
  }


  public BookTicker askPrice(String askPrice) {
    
    this.askPrice = askPrice;
    return this;
  }

   /**
   * Get askPrice
   * @return askPrice
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "16.36450000", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ASK_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAskPrice() {
    return askPrice;
  }


  @JsonProperty(JSON_PROPERTY_ASK_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAskPrice(String askPrice) {
    this.askPrice = askPrice;
  }


  public BookTicker askQty(String askQty) {
    
    this.askQty = askQty;
    return this;
  }

   /**
   * Get askQty
   * @return askQty
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "12.56000000", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ASK_QTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAskQty() {
    return askQty;
  }


  @JsonProperty(JSON_PROPERTY_ASK_QTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAskQty(String askQty) {
    this.askQty = askQty;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BookTicker bookTicker = (BookTicker) o;
    return Objects.equals(this.symbol, bookTicker.symbol) &&
        Objects.equals(this.bidPrice, bookTicker.bidPrice) &&
        Objects.equals(this.bidQty, bookTicker.bidQty) &&
        Objects.equals(this.askPrice, bookTicker.askPrice) &&
        Objects.equals(this.askQty, bookTicker.askQty);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, bidPrice, bidQty, askPrice, askQty);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BookTicker {\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    bidPrice: ").append(toIndentedString(bidPrice)).append("\n");
    sb.append("    bidQty: ").append(toIndentedString(bidQty)).append("\n");
    sb.append("    askPrice: ").append(toIndentedString(askPrice)).append("\n");
    sb.append("    askQty: ").append(toIndentedString(askQty)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

