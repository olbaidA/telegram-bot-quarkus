/*
 * Binance Public Spot API
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.olbaid.binance.service.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.olbaid.binance.service.model.SapiV1AlgoSpotSubOrdersGet200ResponseSubOrdersInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SapiV1AlgoSpotSubOrdersGet200Response
 */
@JsonPropertyOrder({
  SapiV1AlgoSpotSubOrdersGet200Response.JSON_PROPERTY_TOTAL,
  SapiV1AlgoSpotSubOrdersGet200Response.JSON_PROPERTY_EXECUTED_QTY,
  SapiV1AlgoSpotSubOrdersGet200Response.JSON_PROPERTY_EXECUTED_AMT,
  SapiV1AlgoSpotSubOrdersGet200Response.JSON_PROPERTY_SUB_ORDERS
})
@JsonTypeName("_sapi_v1_algo_spot_subOrders_get_200_response")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SapiV1AlgoSpotSubOrdersGet200Response {
  public static final String JSON_PROPERTY_TOTAL = "total";
  private Long total;

  public static final String JSON_PROPERTY_EXECUTED_QTY = "executedQty";
  private String executedQty;

  public static final String JSON_PROPERTY_EXECUTED_AMT = "executedAmt";
  private String executedAmt;

  public static final String JSON_PROPERTY_SUB_ORDERS = "subOrders";
  private List<SapiV1AlgoSpotSubOrdersGet200ResponseSubOrdersInner> subOrders = new ArrayList<>();

  public SapiV1AlgoSpotSubOrdersGet200Response() {
  }

  public SapiV1AlgoSpotSubOrdersGet200Response total(Long total) {
    
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getTotal() {
    return total;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotal(Long total) {
    this.total = total;
  }


  public SapiV1AlgoSpotSubOrdersGet200Response executedQty(String executedQty) {
    
    this.executedQty = executedQty;
    return this;
  }

   /**
   * Get executedQty
   * @return executedQty
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "1.000", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_EXECUTED_QTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExecutedQty() {
    return executedQty;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTED_QTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExecutedQty(String executedQty) {
    this.executedQty = executedQty;
  }


  public SapiV1AlgoSpotSubOrdersGet200Response executedAmt(String executedAmt) {
    
    this.executedAmt = executedAmt;
    return this;
  }

   /**
   * Get executedAmt
   * @return executedAmt
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "3229.44000000", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_EXECUTED_AMT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExecutedAmt() {
    return executedAmt;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTED_AMT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExecutedAmt(String executedAmt) {
    this.executedAmt = executedAmt;
  }


  public SapiV1AlgoSpotSubOrdersGet200Response subOrders(List<SapiV1AlgoSpotSubOrdersGet200ResponseSubOrdersInner> subOrders) {
    
    this.subOrders = subOrders;
    return this;
  }

  public SapiV1AlgoSpotSubOrdersGet200Response addSubOrdersItem(SapiV1AlgoSpotSubOrdersGet200ResponseSubOrdersInner subOrdersItem) {
    this.subOrders.add(subOrdersItem);
    return this;
  }

   /**
   * Get subOrders
   * @return subOrders
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SUB_ORDERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<SapiV1AlgoSpotSubOrdersGet200ResponseSubOrdersInner> getSubOrders() {
    return subOrders;
  }


  @JsonProperty(JSON_PROPERTY_SUB_ORDERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubOrders(List<SapiV1AlgoSpotSubOrdersGet200ResponseSubOrdersInner> subOrders) {
    this.subOrders = subOrders;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SapiV1AlgoSpotSubOrdersGet200Response sapiV1AlgoSpotSubOrdersGet200Response = (SapiV1AlgoSpotSubOrdersGet200Response) o;
    return Objects.equals(this.total, sapiV1AlgoSpotSubOrdersGet200Response.total) &&
        Objects.equals(this.executedQty, sapiV1AlgoSpotSubOrdersGet200Response.executedQty) &&
        Objects.equals(this.executedAmt, sapiV1AlgoSpotSubOrdersGet200Response.executedAmt) &&
        Objects.equals(this.subOrders, sapiV1AlgoSpotSubOrdersGet200Response.subOrders);
  }

  @Override
  public int hashCode() {
    return Objects.hash(total, executedQty, executedAmt, subOrders);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SapiV1AlgoSpotSubOrdersGet200Response {\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    executedQty: ").append(toIndentedString(executedQty)).append("\n");
    sb.append("    executedAmt: ").append(toIndentedString(executedAmt)).append("\n");
    sb.append("    subOrders: ").append(toIndentedString(subOrders)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

