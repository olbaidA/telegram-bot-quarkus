/*
 * Binance Public Spot API
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.olbaid.binance.service.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.olbaid.binance.service.model.SapiV1AccountApiTradingStatusGet200ResponseDataIndicatorsBTCUSDTInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The indicators updated every 30 seconds
 */
@ApiModel(description = "The indicators updated every 30 seconds")
@JsonPropertyOrder({
  SapiV1AccountApiTradingStatusGet200ResponseDataIndicators.JSON_PROPERTY_B_T_C_U_S_D_T
})
@JsonTypeName("_sapi_v1_account_apiTradingStatus_get_200_response_data_indicators")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SapiV1AccountApiTradingStatusGet200ResponseDataIndicators {
  public static final String JSON_PROPERTY_B_T_C_U_S_D_T = "BTCUSDT";
  private List<SapiV1AccountApiTradingStatusGet200ResponseDataIndicatorsBTCUSDTInner> BTCUSDT = new ArrayList<>();

  public SapiV1AccountApiTradingStatusGet200ResponseDataIndicators() {
  }

  public SapiV1AccountApiTradingStatusGet200ResponseDataIndicators BTCUSDT(List<SapiV1AccountApiTradingStatusGet200ResponseDataIndicatorsBTCUSDTInner> BTCUSDT) {
    
    this.BTCUSDT = BTCUSDT;
    return this;
  }

  public SapiV1AccountApiTradingStatusGet200ResponseDataIndicators addBTCUSDTItem(SapiV1AccountApiTradingStatusGet200ResponseDataIndicatorsBTCUSDTInner BTCUSDTItem) {
    this.BTCUSDT.add(BTCUSDTItem);
    return this;
  }

   /**
   * Get BTCUSDT
   * @return BTCUSDT
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_B_T_C_U_S_D_T)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<SapiV1AccountApiTradingStatusGet200ResponseDataIndicatorsBTCUSDTInner> getBTCUSDT() {
    return BTCUSDT;
  }


  @JsonProperty(JSON_PROPERTY_B_T_C_U_S_D_T)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBTCUSDT(List<SapiV1AccountApiTradingStatusGet200ResponseDataIndicatorsBTCUSDTInner> BTCUSDT) {
    this.BTCUSDT = BTCUSDT;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SapiV1AccountApiTradingStatusGet200ResponseDataIndicators sapiV1AccountApiTradingStatusGet200ResponseDataIndicators = (SapiV1AccountApiTradingStatusGet200ResponseDataIndicators) o;
    return Objects.equals(this.BTCUSDT, sapiV1AccountApiTradingStatusGet200ResponseDataIndicators.BTCUSDT);
  }

  @Override
  public int hashCode() {
    return Objects.hash(BTCUSDT);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SapiV1AccountApiTradingStatusGet200ResponseDataIndicators {\n");
    sb.append("    BTCUSDT: ").append(toIndentedString(BTCUSDT)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

