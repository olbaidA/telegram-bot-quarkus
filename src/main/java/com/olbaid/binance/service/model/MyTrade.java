/*
 * Binance Public Spot API
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.olbaid.binance.service.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MyTrade
 */
@JsonPropertyOrder({
  MyTrade.JSON_PROPERTY_SYMBOL,
  MyTrade.JSON_PROPERTY_ID,
  MyTrade.JSON_PROPERTY_ORDER_ID,
  MyTrade.JSON_PROPERTY_ORDER_LIST_ID,
  MyTrade.JSON_PROPERTY_PRICE,
  MyTrade.JSON_PROPERTY_QTY,
  MyTrade.JSON_PROPERTY_QUOTE_QTY,
  MyTrade.JSON_PROPERTY_COMMISSION,
  MyTrade.JSON_PROPERTY_COMMISSION_ASSET,
  MyTrade.JSON_PROPERTY_TIME,
  MyTrade.JSON_PROPERTY_IS_BUYER,
  MyTrade.JSON_PROPERTY_IS_MAKER,
  MyTrade.JSON_PROPERTY_IS_BEST_MATCH
})
@JsonTypeName("myTrade")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MyTrade {
  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  private String symbol;

  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_ORDER_ID = "orderId";
  private Long orderId;

  public static final String JSON_PROPERTY_ORDER_LIST_ID = "orderListId";
  private Long orderListId;

  public static final String JSON_PROPERTY_PRICE = "price";
  private String price;

  public static final String JSON_PROPERTY_QTY = "qty";
  private String qty;

  public static final String JSON_PROPERTY_QUOTE_QTY = "quoteQty";
  private String quoteQty;

  public static final String JSON_PROPERTY_COMMISSION = "commission";
  private String commission;

  public static final String JSON_PROPERTY_COMMISSION_ASSET = "commissionAsset";
  private String commissionAsset;

  public static final String JSON_PROPERTY_TIME = "time";
  private Long time;

  public static final String JSON_PROPERTY_IS_BUYER = "isBuyer";
  private Boolean isBuyer;

  public static final String JSON_PROPERTY_IS_MAKER = "isMaker";
  private Boolean isMaker;

  public static final String JSON_PROPERTY_IS_BEST_MATCH = "isBestMatch";
  private Boolean isBestMatch;

  public MyTrade() {
  }

  public MyTrade symbol(String symbol) {
    
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "BNBBTC", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  public MyTrade id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Trade id
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "28457", required = true, value = "Trade id")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public MyTrade orderId(Long orderId) {
    
    this.orderId = orderId;
    return this;
  }

   /**
   * Get orderId
   * @return orderId
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "100234", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ORDER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getOrderId() {
    return orderId;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrderId(Long orderId) {
    this.orderId = orderId;
  }


  public MyTrade orderListId(Long orderListId) {
    
    this.orderListId = orderListId;
    return this;
  }

   /**
   * Get orderListId
   * @return orderListId
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "-1", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ORDER_LIST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getOrderListId() {
    return orderListId;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_LIST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrderListId(Long orderListId) {
    this.orderListId = orderListId;
  }


  public MyTrade price(String price) {
    
    this.price = price;
    return this;
  }

   /**
   * Price
   * @return price
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "4.00000100", required = true, value = "Price")
  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPrice() {
    return price;
  }


  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPrice(String price) {
    this.price = price;
  }


  public MyTrade qty(String qty) {
    
    this.qty = qty;
    return this;
  }

   /**
   * Amount of base asset
   * @return qty
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "12.00000000", required = true, value = "Amount of base asset")
  @JsonProperty(JSON_PROPERTY_QTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getQty() {
    return qty;
  }


  @JsonProperty(JSON_PROPERTY_QTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQty(String qty) {
    this.qty = qty;
  }


  public MyTrade quoteQty(String quoteQty) {
    
    this.quoteQty = quoteQty;
    return this;
  }

   /**
   * Amount of quote asset
   * @return quoteQty
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "48.000012", required = true, value = "Amount of quote asset")
  @JsonProperty(JSON_PROPERTY_QUOTE_QTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getQuoteQty() {
    return quoteQty;
  }


  @JsonProperty(JSON_PROPERTY_QUOTE_QTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQuoteQty(String quoteQty) {
    this.quoteQty = quoteQty;
  }


  public MyTrade commission(String commission) {
    
    this.commission = commission;
    return this;
  }

   /**
   * Get commission
   * @return commission
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "10.10000000", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_COMMISSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCommission() {
    return commission;
  }


  @JsonProperty(JSON_PROPERTY_COMMISSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCommission(String commission) {
    this.commission = commission;
  }


  public MyTrade commissionAsset(String commissionAsset) {
    
    this.commissionAsset = commissionAsset;
    return this;
  }

   /**
   * Get commissionAsset
   * @return commissionAsset
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "BNB", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_COMMISSION_ASSET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCommissionAsset() {
    return commissionAsset;
  }


  @JsonProperty(JSON_PROPERTY_COMMISSION_ASSET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCommissionAsset(String commissionAsset) {
    this.commissionAsset = commissionAsset;
  }


  public MyTrade time(Long time) {
    
    this.time = time;
    return this;
  }

   /**
   * Trade timestamp
   * @return time
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "1499865549590", required = true, value = "Trade timestamp")
  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getTime() {
    return time;
  }


  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTime(Long time) {
    this.time = time;
  }


  public MyTrade isBuyer(Boolean isBuyer) {
    
    this.isBuyer = isBuyer;
    return this;
  }

   /**
   * Get isBuyer
   * @return isBuyer
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_IS_BUYER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsBuyer() {
    return isBuyer;
  }


  @JsonProperty(JSON_PROPERTY_IS_BUYER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsBuyer(Boolean isBuyer) {
    this.isBuyer = isBuyer;
  }


  public MyTrade isMaker(Boolean isMaker) {
    
    this.isMaker = isMaker;
    return this;
  }

   /**
   * Get isMaker
   * @return isMaker
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_IS_MAKER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsMaker() {
    return isMaker;
  }


  @JsonProperty(JSON_PROPERTY_IS_MAKER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsMaker(Boolean isMaker) {
    this.isMaker = isMaker;
  }


  public MyTrade isBestMatch(Boolean isBestMatch) {
    
    this.isBestMatch = isBestMatch;
    return this;
  }

   /**
   * Get isBestMatch
   * @return isBestMatch
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_IS_BEST_MATCH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsBestMatch() {
    return isBestMatch;
  }


  @JsonProperty(JSON_PROPERTY_IS_BEST_MATCH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsBestMatch(Boolean isBestMatch) {
    this.isBestMatch = isBestMatch;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MyTrade myTrade = (MyTrade) o;
    return Objects.equals(this.symbol, myTrade.symbol) &&
        Objects.equals(this.id, myTrade.id) &&
        Objects.equals(this.orderId, myTrade.orderId) &&
        Objects.equals(this.orderListId, myTrade.orderListId) &&
        Objects.equals(this.price, myTrade.price) &&
        Objects.equals(this.qty, myTrade.qty) &&
        Objects.equals(this.quoteQty, myTrade.quoteQty) &&
        Objects.equals(this.commission, myTrade.commission) &&
        Objects.equals(this.commissionAsset, myTrade.commissionAsset) &&
        Objects.equals(this.time, myTrade.time) &&
        Objects.equals(this.isBuyer, myTrade.isBuyer) &&
        Objects.equals(this.isMaker, myTrade.isMaker) &&
        Objects.equals(this.isBestMatch, myTrade.isBestMatch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, id, orderId, orderListId, price, qty, quoteQty, commission, commissionAsset, time, isBuyer, isMaker, isBestMatch);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MyTrade {\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    orderListId: ").append(toIndentedString(orderListId)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    qty: ").append(toIndentedString(qty)).append("\n");
    sb.append("    quoteQty: ").append(toIndentedString(quoteQty)).append("\n");
    sb.append("    commission: ").append(toIndentedString(commission)).append("\n");
    sb.append("    commissionAsset: ").append(toIndentedString(commissionAsset)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    isBuyer: ").append(toIndentedString(isBuyer)).append("\n");
    sb.append("    isMaker: ").append(toIndentedString(isMaker)).append("\n");
    sb.append("    isBestMatch: ").append(toIndentedString(isBestMatch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

