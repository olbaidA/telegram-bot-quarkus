/*
 * Binance Public Spot API
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.olbaid.binance.service.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.olbaid.binance.service.model.SnapshotFuturesSnapshotVosInnerDataAssetsInner;
import com.olbaid.binance.service.model.SnapshotFuturesSnapshotVosInnerDataPositionInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SnapshotFuturesSnapshotVosInnerData
 */
@JsonPropertyOrder({
  SnapshotFuturesSnapshotVosInnerData.JSON_PROPERTY_ASSETS,
  SnapshotFuturesSnapshotVosInnerData.JSON_PROPERTY_POSITION
})
@JsonTypeName("snapshotFutures_snapshotVos_inner_data")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SnapshotFuturesSnapshotVosInnerData {
  public static final String JSON_PROPERTY_ASSETS = "assets";
  private List<SnapshotFuturesSnapshotVosInnerDataAssetsInner> assets = new ArrayList<>();

  public static final String JSON_PROPERTY_POSITION = "position";
  private List<SnapshotFuturesSnapshotVosInnerDataPositionInner> position = new ArrayList<>();

  public SnapshotFuturesSnapshotVosInnerData() {
  }

  public SnapshotFuturesSnapshotVosInnerData assets(List<SnapshotFuturesSnapshotVosInnerDataAssetsInner> assets) {
    
    this.assets = assets;
    return this;
  }

  public SnapshotFuturesSnapshotVosInnerData addAssetsItem(SnapshotFuturesSnapshotVosInnerDataAssetsInner assetsItem) {
    this.assets.add(assetsItem);
    return this;
  }

   /**
   * Get assets
   * @return assets
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ASSETS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<SnapshotFuturesSnapshotVosInnerDataAssetsInner> getAssets() {
    return assets;
  }


  @JsonProperty(JSON_PROPERTY_ASSETS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAssets(List<SnapshotFuturesSnapshotVosInnerDataAssetsInner> assets) {
    this.assets = assets;
  }


  public SnapshotFuturesSnapshotVosInnerData position(List<SnapshotFuturesSnapshotVosInnerDataPositionInner> position) {
    
    this.position = position;
    return this;
  }

  public SnapshotFuturesSnapshotVosInnerData addPositionItem(SnapshotFuturesSnapshotVosInnerDataPositionInner positionItem) {
    this.position.add(positionItem);
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<SnapshotFuturesSnapshotVosInnerDataPositionInner> getPosition() {
    return position;
  }


  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPosition(List<SnapshotFuturesSnapshotVosInnerDataPositionInner> position) {
    this.position = position;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SnapshotFuturesSnapshotVosInnerData snapshotFuturesSnapshotVosInnerData = (SnapshotFuturesSnapshotVosInnerData) o;
    return Objects.equals(this.assets, snapshotFuturesSnapshotVosInnerData.assets) &&
        Objects.equals(this.position, snapshotFuturesSnapshotVosInnerData.position);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assets, position);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SnapshotFuturesSnapshotVosInnerData {\n");
    sb.append("    assets: ").append(toIndentedString(assets)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

