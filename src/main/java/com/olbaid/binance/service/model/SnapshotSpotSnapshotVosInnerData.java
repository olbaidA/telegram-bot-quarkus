/*
 * Binance Public Spot API
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.olbaid.binance.service.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.olbaid.binance.service.model.SnapshotSpotSnapshotVosInnerDataBalancesInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SnapshotSpotSnapshotVosInnerData
 */
@JsonPropertyOrder({
  SnapshotSpotSnapshotVosInnerData.JSON_PROPERTY_BALANCES,
  SnapshotSpotSnapshotVosInnerData.JSON_PROPERTY_TOTAL_ASSET_OF_BTC
})
@JsonTypeName("snapshotSpot_snapshotVos_inner_data")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SnapshotSpotSnapshotVosInnerData {
  public static final String JSON_PROPERTY_BALANCES = "balances";
  private List<SnapshotSpotSnapshotVosInnerDataBalancesInner> balances = new ArrayList<>();

  public static final String JSON_PROPERTY_TOTAL_ASSET_OF_BTC = "totalAssetOfBtc";
  private String totalAssetOfBtc;

  public SnapshotSpotSnapshotVosInnerData() {
  }

  public SnapshotSpotSnapshotVosInnerData balances(List<SnapshotSpotSnapshotVosInnerDataBalancesInner> balances) {
    
    this.balances = balances;
    return this;
  }

  public SnapshotSpotSnapshotVosInnerData addBalancesItem(SnapshotSpotSnapshotVosInnerDataBalancesInner balancesItem) {
    this.balances.add(balancesItem);
    return this;
  }

   /**
   * Get balances
   * @return balances
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_BALANCES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<SnapshotSpotSnapshotVosInnerDataBalancesInner> getBalances() {
    return balances;
  }


  @JsonProperty(JSON_PROPERTY_BALANCES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBalances(List<SnapshotSpotSnapshotVosInnerDataBalancesInner> balances) {
    this.balances = balances;
  }


  public SnapshotSpotSnapshotVosInnerData totalAssetOfBtc(String totalAssetOfBtc) {
    
    this.totalAssetOfBtc = totalAssetOfBtc;
    return this;
  }

   /**
   * Get totalAssetOfBtc
   * @return totalAssetOfBtc
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "0.09905021", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TOTAL_ASSET_OF_BTC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTotalAssetOfBtc() {
    return totalAssetOfBtc;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_ASSET_OF_BTC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalAssetOfBtc(String totalAssetOfBtc) {
    this.totalAssetOfBtc = totalAssetOfBtc;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SnapshotSpotSnapshotVosInnerData snapshotSpotSnapshotVosInnerData = (SnapshotSpotSnapshotVosInnerData) o;
    return Objects.equals(this.balances, snapshotSpotSnapshotVosInnerData.balances) &&
        Objects.equals(this.totalAssetOfBtc, snapshotSpotSnapshotVosInnerData.totalAssetOfBtc);
  }

  @Override
  public int hashCode() {
    return Objects.hash(balances, totalAssetOfBtc);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SnapshotSpotSnapshotVosInnerData {\n");
    sb.append("    balances: ").append(toIndentedString(balances)).append("\n");
    sb.append("    totalAssetOfBtc: ").append(toIndentedString(totalAssetOfBtc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

