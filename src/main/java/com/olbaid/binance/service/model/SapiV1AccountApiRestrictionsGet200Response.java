/*
 * Binance Public Spot API
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.olbaid.binance.service.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SapiV1AccountApiRestrictionsGet200Response
 */
@JsonPropertyOrder({
  SapiV1AccountApiRestrictionsGet200Response.JSON_PROPERTY_IP_RESTRICT,
  SapiV1AccountApiRestrictionsGet200Response.JSON_PROPERTY_CREATE_TIME,
  SapiV1AccountApiRestrictionsGet200Response.JSON_PROPERTY_ENABLE_INTERNAL_TRANSFER,
  SapiV1AccountApiRestrictionsGet200Response.JSON_PROPERTY_ENABLE_FUTURES,
  SapiV1AccountApiRestrictionsGet200Response.JSON_PROPERTY_ENABLE_PORTFOLIO_MARGIN_TRADING,
  SapiV1AccountApiRestrictionsGet200Response.JSON_PROPERTY_ENABLE_VANILLA_OPTIONS,
  SapiV1AccountApiRestrictionsGet200Response.JSON_PROPERTY_PERMITS_UNIVERSAL_TRANSFER,
  SapiV1AccountApiRestrictionsGet200Response.JSON_PROPERTY_ENABLE_READING,
  SapiV1AccountApiRestrictionsGet200Response.JSON_PROPERTY_ENABLE_SPOT_AND_MARGIN_TRADING,
  SapiV1AccountApiRestrictionsGet200Response.JSON_PROPERTY_ENABLE_WITHDRAWALS,
  SapiV1AccountApiRestrictionsGet200Response.JSON_PROPERTY_ENABLE_MARGIN,
  SapiV1AccountApiRestrictionsGet200Response.JSON_PROPERTY_TRADING_AUTHORITY_EXPIRATION_TIME
})
@JsonTypeName("_sapi_v1_account_apiRestrictions_get_200_response")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SapiV1AccountApiRestrictionsGet200Response {
  public static final String JSON_PROPERTY_IP_RESTRICT = "ipRestrict";
  private Boolean ipRestrict;

  public static final String JSON_PROPERTY_CREATE_TIME = "createTime";
  private Long createTime;

  public static final String JSON_PROPERTY_ENABLE_INTERNAL_TRANSFER = "enableInternalTransfer";
  private Boolean enableInternalTransfer;

  public static final String JSON_PROPERTY_ENABLE_FUTURES = "enableFutures";
  private Boolean enableFutures;

  public static final String JSON_PROPERTY_ENABLE_PORTFOLIO_MARGIN_TRADING = "enablePortfolioMarginTrading";
  private Boolean enablePortfolioMarginTrading;

  public static final String JSON_PROPERTY_ENABLE_VANILLA_OPTIONS = "enableVanillaOptions";
  private Boolean enableVanillaOptions;

  public static final String JSON_PROPERTY_PERMITS_UNIVERSAL_TRANSFER = "permitsUniversalTransfer";
  private Boolean permitsUniversalTransfer;

  public static final String JSON_PROPERTY_ENABLE_READING = "enableReading";
  private Boolean enableReading;

  public static final String JSON_PROPERTY_ENABLE_SPOT_AND_MARGIN_TRADING = "enableSpotAndMarginTrading";
  private Boolean enableSpotAndMarginTrading;

  public static final String JSON_PROPERTY_ENABLE_WITHDRAWALS = "enableWithdrawals";
  private Boolean enableWithdrawals;

  public static final String JSON_PROPERTY_ENABLE_MARGIN = "enableMargin";
  private Boolean enableMargin;

  public static final String JSON_PROPERTY_TRADING_AUTHORITY_EXPIRATION_TIME = "tradingAuthorityExpirationTime";
  private Long tradingAuthorityExpirationTime;

  public SapiV1AccountApiRestrictionsGet200Response() {
  }

  public SapiV1AccountApiRestrictionsGet200Response ipRestrict(Boolean ipRestrict) {
    
    this.ipRestrict = ipRestrict;
    return this;
  }

   /**
   * Get ipRestrict
   * @return ipRestrict
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_IP_RESTRICT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIpRestrict() {
    return ipRestrict;
  }


  @JsonProperty(JSON_PROPERTY_IP_RESTRICT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIpRestrict(Boolean ipRestrict) {
    this.ipRestrict = ipRestrict;
  }


  public SapiV1AccountApiRestrictionsGet200Response createTime(Long createTime) {
    
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "1623840271000", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CREATE_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getCreateTime() {
    return createTime;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreateTime(Long createTime) {
    this.createTime = createTime;
  }


  public SapiV1AccountApiRestrictionsGet200Response enableInternalTransfer(Boolean enableInternalTransfer) {
    
    this.enableInternalTransfer = enableInternalTransfer;
    return this;
  }

   /**
   * This option authorizes this key to transfer funds between your master account and your sub account instantly
   * @return enableInternalTransfer
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "This option authorizes this key to transfer funds between your master account and your sub account instantly")
  @JsonProperty(JSON_PROPERTY_ENABLE_INTERNAL_TRANSFER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnableInternalTransfer() {
    return enableInternalTransfer;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_INTERNAL_TRANSFER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnableInternalTransfer(Boolean enableInternalTransfer) {
    this.enableInternalTransfer = enableInternalTransfer;
  }


  public SapiV1AccountApiRestrictionsGet200Response enableFutures(Boolean enableFutures) {
    
    this.enableFutures = enableFutures;
    return this;
  }

   /**
   * API Key created before your futures account opened does not support futures API service
   * @return enableFutures
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "API Key created before your futures account opened does not support futures API service")
  @JsonProperty(JSON_PROPERTY_ENABLE_FUTURES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnableFutures() {
    return enableFutures;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_FUTURES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnableFutures(Boolean enableFutures) {
    this.enableFutures = enableFutures;
  }


  public SapiV1AccountApiRestrictionsGet200Response enablePortfolioMarginTrading(Boolean enablePortfolioMarginTrading) {
    
    this.enablePortfolioMarginTrading = enablePortfolioMarginTrading;
    return this;
  }

   /**
   * API Key created before your activate portfolio margin does not support portfolio margin API service
   * @return enablePortfolioMarginTrading
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "false", value = "API Key created before your activate portfolio margin does not support portfolio margin API service")
  @JsonProperty(JSON_PROPERTY_ENABLE_PORTFOLIO_MARGIN_TRADING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnablePortfolioMarginTrading() {
    return enablePortfolioMarginTrading;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_PORTFOLIO_MARGIN_TRADING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnablePortfolioMarginTrading(Boolean enablePortfolioMarginTrading) {
    this.enablePortfolioMarginTrading = enablePortfolioMarginTrading;
  }


  public SapiV1AccountApiRestrictionsGet200Response enableVanillaOptions(Boolean enableVanillaOptions) {
    
    this.enableVanillaOptions = enableVanillaOptions;
    return this;
  }

   /**
   * Authorizes this key to Vanilla options trading
   * @return enableVanillaOptions
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "Authorizes this key to Vanilla options trading")
  @JsonProperty(JSON_PROPERTY_ENABLE_VANILLA_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnableVanillaOptions() {
    return enableVanillaOptions;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_VANILLA_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnableVanillaOptions(Boolean enableVanillaOptions) {
    this.enableVanillaOptions = enableVanillaOptions;
  }


  public SapiV1AccountApiRestrictionsGet200Response permitsUniversalTransfer(Boolean permitsUniversalTransfer) {
    
    this.permitsUniversalTransfer = permitsUniversalTransfer;
    return this;
  }

   /**
   * Authorizes this key to be used for a dedicated universal transfer API to transfer multiple supported currencies. Each business&#39;s own transfer API rights are not affected by this authorization
   * @return permitsUniversalTransfer
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Authorizes this key to be used for a dedicated universal transfer API to transfer multiple supported currencies. Each business's own transfer API rights are not affected by this authorization")
  @JsonProperty(JSON_PROPERTY_PERMITS_UNIVERSAL_TRANSFER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getPermitsUniversalTransfer() {
    return permitsUniversalTransfer;
  }


  @JsonProperty(JSON_PROPERTY_PERMITS_UNIVERSAL_TRANSFER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPermitsUniversalTransfer(Boolean permitsUniversalTransfer) {
    this.permitsUniversalTransfer = permitsUniversalTransfer;
  }


  public SapiV1AccountApiRestrictionsGet200Response enableReading(Boolean enableReading) {
    
    this.enableReading = enableReading;
    return this;
  }

   /**
   * Get enableReading
   * @return enableReading
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ENABLE_READING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnableReading() {
    return enableReading;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_READING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnableReading(Boolean enableReading) {
    this.enableReading = enableReading;
  }


  public SapiV1AccountApiRestrictionsGet200Response enableSpotAndMarginTrading(Boolean enableSpotAndMarginTrading) {
    
    this.enableSpotAndMarginTrading = enableSpotAndMarginTrading;
    return this;
  }

   /**
   * Get enableSpotAndMarginTrading
   * @return enableSpotAndMarginTrading
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ENABLE_SPOT_AND_MARGIN_TRADING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnableSpotAndMarginTrading() {
    return enableSpotAndMarginTrading;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_SPOT_AND_MARGIN_TRADING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnableSpotAndMarginTrading(Boolean enableSpotAndMarginTrading) {
    this.enableSpotAndMarginTrading = enableSpotAndMarginTrading;
  }


  public SapiV1AccountApiRestrictionsGet200Response enableWithdrawals(Boolean enableWithdrawals) {
    
    this.enableWithdrawals = enableWithdrawals;
    return this;
  }

   /**
   * This option allows you to withdraw via API. You must apply the IP Access Restriction filter in order to enable withdrawals
   * @return enableWithdrawals
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "This option allows you to withdraw via API. You must apply the IP Access Restriction filter in order to enable withdrawals")
  @JsonProperty(JSON_PROPERTY_ENABLE_WITHDRAWALS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnableWithdrawals() {
    return enableWithdrawals;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_WITHDRAWALS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnableWithdrawals(Boolean enableWithdrawals) {
    this.enableWithdrawals = enableWithdrawals;
  }


  public SapiV1AccountApiRestrictionsGet200Response enableMargin(Boolean enableMargin) {
    
    this.enableMargin = enableMargin;
    return this;
  }

   /**
   * This option can be adjusted after the Cross Margin account transfer is completed
   * @return enableMargin
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "This option can be adjusted after the Cross Margin account transfer is completed")
  @JsonProperty(JSON_PROPERTY_ENABLE_MARGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnableMargin() {
    return enableMargin;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_MARGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnableMargin(Boolean enableMargin) {
    this.enableMargin = enableMargin;
  }


  public SapiV1AccountApiRestrictionsGet200Response tradingAuthorityExpirationTime(Long tradingAuthorityExpirationTime) {
    
    this.tradingAuthorityExpirationTime = tradingAuthorityExpirationTime;
    return this;
  }

   /**
   * Expiration time for spot and margin trading permission
   * @return tradingAuthorityExpirationTime
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "1628985600000", required = true, value = "Expiration time for spot and margin trading permission")
  @JsonProperty(JSON_PROPERTY_TRADING_AUTHORITY_EXPIRATION_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getTradingAuthorityExpirationTime() {
    return tradingAuthorityExpirationTime;
  }


  @JsonProperty(JSON_PROPERTY_TRADING_AUTHORITY_EXPIRATION_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTradingAuthorityExpirationTime(Long tradingAuthorityExpirationTime) {
    this.tradingAuthorityExpirationTime = tradingAuthorityExpirationTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SapiV1AccountApiRestrictionsGet200Response sapiV1AccountApiRestrictionsGet200Response = (SapiV1AccountApiRestrictionsGet200Response) o;
    return Objects.equals(this.ipRestrict, sapiV1AccountApiRestrictionsGet200Response.ipRestrict) &&
        Objects.equals(this.createTime, sapiV1AccountApiRestrictionsGet200Response.createTime) &&
        Objects.equals(this.enableInternalTransfer, sapiV1AccountApiRestrictionsGet200Response.enableInternalTransfer) &&
        Objects.equals(this.enableFutures, sapiV1AccountApiRestrictionsGet200Response.enableFutures) &&
        Objects.equals(this.enablePortfolioMarginTrading, sapiV1AccountApiRestrictionsGet200Response.enablePortfolioMarginTrading) &&
        Objects.equals(this.enableVanillaOptions, sapiV1AccountApiRestrictionsGet200Response.enableVanillaOptions) &&
        Objects.equals(this.permitsUniversalTransfer, sapiV1AccountApiRestrictionsGet200Response.permitsUniversalTransfer) &&
        Objects.equals(this.enableReading, sapiV1AccountApiRestrictionsGet200Response.enableReading) &&
        Objects.equals(this.enableSpotAndMarginTrading, sapiV1AccountApiRestrictionsGet200Response.enableSpotAndMarginTrading) &&
        Objects.equals(this.enableWithdrawals, sapiV1AccountApiRestrictionsGet200Response.enableWithdrawals) &&
        Objects.equals(this.enableMargin, sapiV1AccountApiRestrictionsGet200Response.enableMargin) &&
        Objects.equals(this.tradingAuthorityExpirationTime, sapiV1AccountApiRestrictionsGet200Response.tradingAuthorityExpirationTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ipRestrict, createTime, enableInternalTransfer, enableFutures, enablePortfolioMarginTrading, enableVanillaOptions, permitsUniversalTransfer, enableReading, enableSpotAndMarginTrading, enableWithdrawals, enableMargin, tradingAuthorityExpirationTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SapiV1AccountApiRestrictionsGet200Response {\n");
    sb.append("    ipRestrict: ").append(toIndentedString(ipRestrict)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    enableInternalTransfer: ").append(toIndentedString(enableInternalTransfer)).append("\n");
    sb.append("    enableFutures: ").append(toIndentedString(enableFutures)).append("\n");
    sb.append("    enablePortfolioMarginTrading: ").append(toIndentedString(enablePortfolioMarginTrading)).append("\n");
    sb.append("    enableVanillaOptions: ").append(toIndentedString(enableVanillaOptions)).append("\n");
    sb.append("    permitsUniversalTransfer: ").append(toIndentedString(permitsUniversalTransfer)).append("\n");
    sb.append("    enableReading: ").append(toIndentedString(enableReading)).append("\n");
    sb.append("    enableSpotAndMarginTrading: ").append(toIndentedString(enableSpotAndMarginTrading)).append("\n");
    sb.append("    enableWithdrawals: ").append(toIndentedString(enableWithdrawals)).append("\n");
    sb.append("    enableMargin: ").append(toIndentedString(enableMargin)).append("\n");
    sb.append("    tradingAuthorityExpirationTime: ").append(toIndentedString(tradingAuthorityExpirationTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

