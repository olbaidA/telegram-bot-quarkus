/*
 * Binance Public Spot API
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.olbaid.binance.service.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner
 */
@JsonPropertyOrder({
  SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.JSON_PROPERTY_ENTRY_PRICE,
  SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.JSON_PROPERTY_MARK_PRICE,
  SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.JSON_PROPERTY_LEVERAGE,
  SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.JSON_PROPERTY_ISOLATED,
  SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.JSON_PROPERTY_ISOLATED_WALLET,
  SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.JSON_PROPERTY_ISOLATED_MARGIN,
  SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.JSON_PROPERTY_IS_AUTO_ADD_MARGIN,
  SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.JSON_PROPERTY_POSITION_SIDE,
  SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.JSON_PROPERTY_POSITION_AMOUNT,
  SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.JSON_PROPERTY_SYMBOL,
  SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.JSON_PROPERTY_UNREALIZED_PROFIT
})
@JsonTypeName("subAccountCOINFuturesPositionRisk_deliveryPositionRiskVos_inner")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner {
  public static final String JSON_PROPERTY_ENTRY_PRICE = "entryPrice";
  private String entryPrice;

  public static final String JSON_PROPERTY_MARK_PRICE = "markPrice";
  private String markPrice;

  public static final String JSON_PROPERTY_LEVERAGE = "leverage";
  private String leverage;

  public static final String JSON_PROPERTY_ISOLATED = "isolated";
  private String isolated;

  public static final String JSON_PROPERTY_ISOLATED_WALLET = "isolatedWallet";
  private String isolatedWallet;

  public static final String JSON_PROPERTY_ISOLATED_MARGIN = "isolatedMargin";
  private String isolatedMargin;

  public static final String JSON_PROPERTY_IS_AUTO_ADD_MARGIN = "isAutoAddMargin";
  private String isAutoAddMargin;

  public static final String JSON_PROPERTY_POSITION_SIDE = "positionSide";
  private String positionSide;

  public static final String JSON_PROPERTY_POSITION_AMOUNT = "positionAmount";
  private String positionAmount;

  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  private String symbol;

  public static final String JSON_PROPERTY_UNREALIZED_PROFIT = "unrealizedProfit";
  private String unrealizedProfit;

  public SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner() {
  }

  public SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner entryPrice(String entryPrice) {
    
    this.entryPrice = entryPrice;
    return this;
  }

   /**
   * Get entryPrice
   * @return entryPrice
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "9975.12000", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ENTRY_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEntryPrice() {
    return entryPrice;
  }


  @JsonProperty(JSON_PROPERTY_ENTRY_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEntryPrice(String entryPrice) {
    this.entryPrice = entryPrice;
  }


  public SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner markPrice(String markPrice) {
    
    this.markPrice = markPrice;
    return this;
  }

   /**
   * Get markPrice
   * @return markPrice
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "9973.50770517", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MARK_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMarkPrice() {
    return markPrice;
  }


  @JsonProperty(JSON_PROPERTY_MARK_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMarkPrice(String markPrice) {
    this.markPrice = markPrice;
  }


  public SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner leverage(String leverage) {
    
    this.leverage = leverage;
    return this;
  }

   /**
   * Get leverage
   * @return leverage
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "20", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LEVERAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLeverage() {
    return leverage;
  }


  @JsonProperty(JSON_PROPERTY_LEVERAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLeverage(String leverage) {
    this.leverage = leverage;
  }


  public SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner isolated(String isolated) {
    
    this.isolated = isolated;
    return this;
  }

   /**
   * Get isolated
   * @return isolated
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ISOLATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIsolated() {
    return isolated;
  }


  @JsonProperty(JSON_PROPERTY_ISOLATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsolated(String isolated) {
    this.isolated = isolated;
  }


  public SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner isolatedWallet(String isolatedWallet) {
    
    this.isolatedWallet = isolatedWallet;
    return this;
  }

   /**
   * Get isolatedWallet
   * @return isolatedWallet
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "9973.50770517", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ISOLATED_WALLET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIsolatedWallet() {
    return isolatedWallet;
  }


  @JsonProperty(JSON_PROPERTY_ISOLATED_WALLET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsolatedWallet(String isolatedWallet) {
    this.isolatedWallet = isolatedWallet;
  }


  public SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner isolatedMargin(String isolatedMargin) {
    
    this.isolatedMargin = isolatedMargin;
    return this;
  }

   /**
   * Get isolatedMargin
   * @return isolatedMargin
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "0.00000000", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ISOLATED_MARGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIsolatedMargin() {
    return isolatedMargin;
  }


  @JsonProperty(JSON_PROPERTY_ISOLATED_MARGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsolatedMargin(String isolatedMargin) {
    this.isolatedMargin = isolatedMargin;
  }


  public SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner isAutoAddMargin(String isAutoAddMargin) {
    
    this.isAutoAddMargin = isAutoAddMargin;
    return this;
  }

   /**
   * Get isAutoAddMargin
   * @return isAutoAddMargin
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_IS_AUTO_ADD_MARGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIsAutoAddMargin() {
    return isAutoAddMargin;
  }


  @JsonProperty(JSON_PROPERTY_IS_AUTO_ADD_MARGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsAutoAddMargin(String isAutoAddMargin) {
    this.isAutoAddMargin = isAutoAddMargin;
  }


  public SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner positionSide(String positionSide) {
    
    this.positionSide = positionSide;
    return this;
  }

   /**
   * Get positionSide
   * @return positionSide
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "BOTH", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_POSITION_SIDE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPositionSide() {
    return positionSide;
  }


  @JsonProperty(JSON_PROPERTY_POSITION_SIDE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPositionSide(String positionSide) {
    this.positionSide = positionSide;
  }


  public SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner positionAmount(String positionAmount) {
    
    this.positionAmount = positionAmount;
    return this;
  }

   /**
   * Get positionAmount
   * @return positionAmount
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "1.230", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_POSITION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPositionAmount() {
    return positionAmount;
  }


  @JsonProperty(JSON_PROPERTY_POSITION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPositionAmount(String positionAmount) {
    this.positionAmount = positionAmount;
  }


  public SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner symbol(String symbol) {
    
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "BTCUSD_201225", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  public SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner unrealizedProfit(String unrealizedProfit) {
    
    this.unrealizedProfit = unrealizedProfit;
    return this;
  }

   /**
   * Get unrealizedProfit
   * @return unrealizedProfit
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "-0.01612295", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_UNREALIZED_PROFIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUnrealizedProfit() {
    return unrealizedProfit;
  }


  @JsonProperty(JSON_PROPERTY_UNREALIZED_PROFIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUnrealizedProfit(String unrealizedProfit) {
    this.unrealizedProfit = unrealizedProfit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner subAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner = (SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner) o;
    return Objects.equals(this.entryPrice, subAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.entryPrice) &&
        Objects.equals(this.markPrice, subAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.markPrice) &&
        Objects.equals(this.leverage, subAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.leverage) &&
        Objects.equals(this.isolated, subAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.isolated) &&
        Objects.equals(this.isolatedWallet, subAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.isolatedWallet) &&
        Objects.equals(this.isolatedMargin, subAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.isolatedMargin) &&
        Objects.equals(this.isAutoAddMargin, subAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.isAutoAddMargin) &&
        Objects.equals(this.positionSide, subAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.positionSide) &&
        Objects.equals(this.positionAmount, subAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.positionAmount) &&
        Objects.equals(this.symbol, subAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.symbol) &&
        Objects.equals(this.unrealizedProfit, subAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner.unrealizedProfit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entryPrice, markPrice, leverage, isolated, isolatedWallet, isolatedMargin, isAutoAddMargin, positionSide, positionAmount, symbol, unrealizedProfit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubAccountCOINFuturesPositionRiskDeliveryPositionRiskVosInner {\n");
    sb.append("    entryPrice: ").append(toIndentedString(entryPrice)).append("\n");
    sb.append("    markPrice: ").append(toIndentedString(markPrice)).append("\n");
    sb.append("    leverage: ").append(toIndentedString(leverage)).append("\n");
    sb.append("    isolated: ").append(toIndentedString(isolated)).append("\n");
    sb.append("    isolatedWallet: ").append(toIndentedString(isolatedWallet)).append("\n");
    sb.append("    isolatedMargin: ").append(toIndentedString(isolatedMargin)).append("\n");
    sb.append("    isAutoAddMargin: ").append(toIndentedString(isAutoAddMargin)).append("\n");
    sb.append("    positionSide: ").append(toIndentedString(positionSide)).append("\n");
    sb.append("    positionAmount: ").append(toIndentedString(positionAmount)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    unrealizedProfit: ").append(toIndentedString(unrealizedProfit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

