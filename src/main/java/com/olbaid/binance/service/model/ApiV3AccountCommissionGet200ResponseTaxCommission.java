/*
 * Binance Public Spot API
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.olbaid.binance.service.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Tax commission rates for trades from the order.
 */
@ApiModel(description = "Tax commission rates for trades from the order.")
@JsonPropertyOrder({
  ApiV3AccountCommissionGet200ResponseTaxCommission.JSON_PROPERTY_MAKER,
  ApiV3AccountCommissionGet200ResponseTaxCommission.JSON_PROPERTY_TAKER,
  ApiV3AccountCommissionGet200ResponseTaxCommission.JSON_PROPERTY_BUYER,
  ApiV3AccountCommissionGet200ResponseTaxCommission.JSON_PROPERTY_SELLER
})
@JsonTypeName("_api_v3_account_commission_get_200_response_taxCommission")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ApiV3AccountCommissionGet200ResponseTaxCommission {
  public static final String JSON_PROPERTY_MAKER = "maker";
  private String maker;

  public static final String JSON_PROPERTY_TAKER = "taker";
  private String taker;

  public static final String JSON_PROPERTY_BUYER = "buyer";
  private String buyer;

  public static final String JSON_PROPERTY_SELLER = "seller";
  private String seller;

  public ApiV3AccountCommissionGet200ResponseTaxCommission() {
  }

  public ApiV3AccountCommissionGet200ResponseTaxCommission maker(String maker) {
    
    this.maker = maker;
    return this;
  }

   /**
   * Get maker
   * @return maker
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "0.00000112", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MAKER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMaker() {
    return maker;
  }


  @JsonProperty(JSON_PROPERTY_MAKER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaker(String maker) {
    this.maker = maker;
  }


  public ApiV3AccountCommissionGet200ResponseTaxCommission taker(String taker) {
    
    this.taker = taker;
    return this;
  }

   /**
   * Get taker
   * @return taker
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "0.00000114", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TAKER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTaker() {
    return taker;
  }


  @JsonProperty(JSON_PROPERTY_TAKER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTaker(String taker) {
    this.taker = taker;
  }


  public ApiV3AccountCommissionGet200ResponseTaxCommission buyer(String buyer) {
    
    this.buyer = buyer;
    return this;
  }

   /**
   * Get buyer
   * @return buyer
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "0.00000118", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_BUYER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBuyer() {
    return buyer;
  }


  @JsonProperty(JSON_PROPERTY_BUYER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBuyer(String buyer) {
    this.buyer = buyer;
  }


  public ApiV3AccountCommissionGet200ResponseTaxCommission seller(String seller) {
    
    this.seller = seller;
    return this;
  }

   /**
   * Get seller
   * @return seller
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "0.00000116", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SELLER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSeller() {
    return seller;
  }


  @JsonProperty(JSON_PROPERTY_SELLER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSeller(String seller) {
    this.seller = seller;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiV3AccountCommissionGet200ResponseTaxCommission apiV3AccountCommissionGet200ResponseTaxCommission = (ApiV3AccountCommissionGet200ResponseTaxCommission) o;
    return Objects.equals(this.maker, apiV3AccountCommissionGet200ResponseTaxCommission.maker) &&
        Objects.equals(this.taker, apiV3AccountCommissionGet200ResponseTaxCommission.taker) &&
        Objects.equals(this.buyer, apiV3AccountCommissionGet200ResponseTaxCommission.buyer) &&
        Objects.equals(this.seller, apiV3AccountCommissionGet200ResponseTaxCommission.seller);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maker, taker, buyer, seller);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiV3AccountCommissionGet200ResponseTaxCommission {\n");
    sb.append("    maker: ").append(toIndentedString(maker)).append("\n");
    sb.append("    taker: ").append(toIndentedString(taker)).append("\n");
    sb.append("    buyer: ").append(toIndentedString(buyer)).append("\n");
    sb.append("    seller: ").append(toIndentedString(seller)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

